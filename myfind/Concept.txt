/**Kernfunktionen**/

/*Syntax des Kommandos*/
myfind <file or directory> [ <action> ] ...

/**Jedes File wird im Find-Durchlauf durch diese Funktion geprüft. 
*Die Variabel file_name steht hier für das aktuell untersuchte File.
*Die Variabel ist parms das zu suchende File, das mit dem ersten Funktions *Parameter *(argv[1]) übergeben wird*/
do_file(const char* file_name, const char* const* parms)
	/*Funktionsverlauf*/
	/*test if file_name != directory
		/*test if file_name == parms
			/*test if actions are set
				/*do actions
			/*print result
			/* return 0
	/*do_dir(file_name, parms)
	
/**Jedes Directory wird von der Funktion geöffnet, gelesen und geschlossen.
*Für jedes File in diesem Directory wird do_file() aufgerufen.
*Die Variabel dir_name wird benötigt für die Übergabe des aktuell untersuchten Directory 
*Die Variabel parms übergibt den Parameter (argv[1])*/
do_dir(const char* dir_name, const char* const* parms)
	/*Funktionsaufrufe*/	
	/*opendir() 
		=> opens a directory stream, returns a pointer to first entry of directory
		=> DIR *opendir(const char* name)
	/*readdir() 
		=> returns a pointer to the directory data structure (char d_name sollte relevant für uns sein), returns NULL in end of directory stream is reached
		=> struct dirent *readdir(DIR *dirp)
	/*do_file()
		=> do_file(dirent->d_name, parms)
	/*closedir() => closes directory stream
		=> int closedir(DIR *dirp)
	




	
	